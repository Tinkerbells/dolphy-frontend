// src/services/fakeData.ts
import type { Card } from '../domain/card'
import type { Deck } from '../domain/deck'

import { currentDatetime } from '../lib/datetime'

// Sample decks for testing
export const LOCAL_DECKS: Deck[] = [
  {
    id: '1',
    title: 'Spanish Vocabulary',
    description: 'Basic Spanish words for beginners',
    created: currentDatetime(),
    owner: 'demo-user',
    tags: ['language', 'spanish', 'beginner'],
    cardCount: 3,
    newCount: 3,
    reviewCount: 0,
    learningCount: 0,
  },
  {
    id: '2',
    title: 'JavaScript Concepts',
    description: 'Important JavaScript concepts for interviews',
    created: currentDatetime(),
    owner: 'demo-user',
    tags: ['programming', 'javascript', 'interview'],
    cardCount: 3,
    newCount: 3,
    reviewCount: 0,
    learningCount: 0,
  },
  {
    id: '3',
    title: 'World Capitals',
    description: 'Capitals of countries around the world',
    created: currentDatetime(),
    owner: 'demo-user',
    tags: ['geography', 'capitals'],
    cardCount: 3,
    newCount: 3,
    reviewCount: 0,
    learningCount: 0,
  },
]

// Sample cards for testing
export const LOCAL_CARDS: Card[] = [
  // Spanish deck cards
  {
    id: '101',
    front: 'Hello',
    back: 'Hola',
    tags: ['greeting'],
    deckId: '1',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },
  {
    id: '102',
    front: 'Goodbye',
    back: 'Adi√≥s',
    tags: ['greeting'],
    deckId: '1',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },
  {
    id: '103',
    front: 'Thank you',
    back: 'Gracias',
    tags: ['courtesy'],
    deckId: '1',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },

  // JavaScript deck cards
  {
    id: '201',
    front: 'What is closure in JavaScript?',
    back: 'A closure is a function that has access to its outer function scope even after the outer function has returned.',
    tags: ['fundamentals'],
    deckId: '2',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },
  {
    id: '202',
    front: 'Explain \'this\' in JavaScript',
    back: 'The value of \'this\' is determined by how a function is called. In a method, \'this\' refers to the owner object. Alone, \'this\' refers to the global object.',
    tags: ['fundamentals'],
    deckId: '2',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },
  {
    id: '203',
    front: 'What is the difference between \'==\' and \'===\'?',
    back: '\'==\' compares values with type coercion. \'===\' compares both values and types without coercion.',
    tags: ['operators'],
    deckId: '2',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },

  // World Capitals deck cards
  {
    id: '301',
    front: 'France',
    back: 'Paris',
    tags: ['europe'],
    deckId: '3',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },
  {
    id: '302',
    front: 'Japan',
    back: 'Tokyo',
    tags: ['asia'],
    deckId: '3',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },
  {
    id: '303',
    front: 'Egypt',
    back: 'Cairo',
    tags: ['africa'],
    deckId: '3',
    created: currentDatetime(),
    difficulty: 0,
    status: 'new',
    lapses: 0,
    interval: 0,
  },
]
